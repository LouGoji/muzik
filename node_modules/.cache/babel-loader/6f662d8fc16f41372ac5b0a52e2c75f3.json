{"ast":null,"code":"var _jsxFileName = \"/Users/loiuismantell/muzik/src/components/AlbumView.jsx\",\n  _s = $RefreshSig$();\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AlbumView() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [albumData, setAlbumData] = useState([]);\n  const navigate = useNavigate();\n  const navButtons = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(-1),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), \"|\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  };\n  useEffect(() => {\n    const API_URL = `http://localhost:4000/song/${id}`;\n    const fetchData = async () => {\n      const response = await fetch(API_URL);\n      const resData = await response.json();\n      setAlbumData(resData.results);\n    };\n    fetchData();\n  }, [id]);\n  const justSongs = albumData.filter(entry => entry.wrapperType === 'track');\n  const renderSongs = justSongs.map((song, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: song.trackName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [albumData.length > 0 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: albumData[0].collectionName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 78\n    }, this), navButtons(), renderSongs]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(AlbumView, \"FJYTqm6c5g+vaUyr1/bgHqw14P4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AlbumView;\nexport default AlbumView;\nvar _c;\n$RefreshReg$(_c, \"AlbumView\");","map":{"version":3,"names":["useParams","useNavigate","useState","useEffect","AlbumView","id","albumData","setAlbumData","navigate","navButtons","API_URL","fetchData","response","fetch","resData","json","results","justSongs","filter","entry","wrapperType","renderSongs","map","song","i","trackName","length","collectionName"],"sources":["/Users/loiuismantell/muzik/src/components/AlbumView.jsx"],"sourcesContent":["import { useParams, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nfunction AlbumView() {\n    const { id } = useParams()\n    const [albumData, setAlbumData] = useState([])\n    const navigate = useNavigate()\n\n    const navButtons = () => {\n        return (\n            <div>\n                <button onClick={() => navigate(-1)}>Back</button>\n                |\n                <button onClick={() => navigate('/')}>Home</button>\n            </div>\n        )\n    }\n\n    useEffect(() => {\n        const API_URL = `http://localhost:4000/song/${id}`\n        const fetchData = async () => {\n            const response = await fetch(API_URL)\n            const resData = await response.json()\n            setAlbumData(resData.results)\n        }\n        fetchData()\n    }, [id])\n    const justSongs = albumData.filter(entry => entry.wrapperType === 'track')\n\n    const renderSongs = justSongs.map((song, i) => {\n        return (\n            <div key={id}>\n                <p>{song.trackName}</p>\n            </div>\n        )\n    })\n\n    return (\n        <div>\n            {/* <h2>The id passed was: {id}</h2> */}\n            {albumData.length > 0 ? <h2>{albumData[0].collectionName}</h2> : <h2>Loading...</h2>}\n            {navButtons()}\n            {renderSongs}\n        </div>\n    )\n}\n\nexport default AlbumView"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAE5C,SAASC,SAAS,GAAG;EAAA;EACjB,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,EAAE;EAC1B,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMM,QAAQ,GAAGP,WAAW,EAAE;EAE9B,MAAMQ,UAAU,GAAG,MAAM;IACrB,oBACI;MAAA,wBACI;QAAQ,OAAO,EAAE,MAAMD,QAAQ,CAAC,CAAC,CAAC,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,oBAElD;QAAQ,OAAO,EAAE,MAAMA,QAAQ,CAAC,GAAG,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA,QACjD;EAEd,CAAC;EAEDL,SAAS,CAAC,MAAM;IACZ,MAAMO,OAAO,GAAI,8BAA6BL,EAAG,EAAC;IAClD,MAAMM,SAAS,GAAG,YAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC;MACrC,MAAMI,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MACrCR,YAAY,CAACO,OAAO,CAACE,OAAO,CAAC;IACjC,CAAC;IACDL,SAAS,EAAE;EACf,CAAC,EAAE,CAACN,EAAE,CAAC,CAAC;EACR,MAAMY,SAAS,GAAGX,SAAS,CAACY,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,WAAW,KAAK,OAAO,CAAC;EAE1E,MAAMC,WAAW,GAAGJ,SAAS,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;IAC3C,oBACI;MAAA,uBACI;QAAA,UAAID,IAAI,CAACE;MAAS;QAAA;QAAA;QAAA;MAAA;IAAK,GADjBpB,EAAE;MAAA;MAAA;MAAA;IAAA,QAEN;EAEd,CAAC,CAAC;EAEF,oBACI;IAAA,WAEKC,SAAS,CAACoB,MAAM,GAAG,CAAC,gBAAG;MAAA,UAAKpB,SAAS,CAAC,CAAC,CAAC,CAACqB;IAAc;MAAA;MAAA;MAAA;IAAA,QAAM,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,EACnFlB,UAAU,EAAE,EACZY,WAAW;EAAA;IAAA;IAAA;IAAA;EAAA,QACV;AAEd;AAAC,GA1CQjB,SAAS;EAAA,QACCJ,SAAS,EAEPC,WAAW;AAAA;AAAA,KAHvBG,SAAS;AA4ClB,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}